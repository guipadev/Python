"""
U3 - 6 | Tarea 3 - Lista de reproducci√≥n (II)
En esta actividad retomaremos el problema descrito en el anterior ejemplo, ampliando las 
funcionalidades que debe cumplir el programa objetivo.

üí° Problema: Listas de reproducci√≥n (II)
El programa ha sido un √©xito en las reuniones con su grupo de amigos. 
El proceso de elegir canci√≥n se ha simplificado, y pueden poner su atenci√≥n en otras actividades. 
Sin embargo, tras discutirlo varias veces con sus amigos, se decide que estar√≠a bien que el 
programa permitiera listar las canciones que siguen a continuaci√≥n para un artista y que en vez 
de eliminar las canciones reproducidas, estas fueran a√±adidas al final de la cola para tener una 
reproducci√≥n ilimitada.

Vuelven a revisar los detalles del programa, y definen que tendr√° los siguientes 4 comandos:

1. a√±adir: 
primero que nada, su programa deber√≠a permitir a√±adir canciones nuevas. 
Para esto, el usuario puede agregar el t√≠tulo de una canci√≥n de un artista determinado. 
Una vez recibe el comando a√±adir, el programa recibe, en las dos l√≠neas siguientes, 
el nombre de la canci√≥n y el nombre de artista y lo agrega a la lista de reproducci√≥n.

2. reproducir: 
una vez usted y sus amigos han a√±adido las canciones que m√°s les gustan, deber√≠an poder "reproducir"
la siguiente canci√≥n. 

Despu√©s de ingresar el comando reproducir, en la siguiente l√≠nea se ingresa el
nombre de un artista, el programa deber√° escribir en pantalla la siguiente canci√≥n a reproducirse. 

Las canciones se reproducir√°n en el orden en el que fueron a√±adidas, reproduciendo primero las 
canciones m√°s antiguas y continuando en la lista de reproducci√≥n por orden de llegada.

Cuando se reproduce la √∫ltima canci√≥n, la pr√≥xima canci√≥n que se reproduzca ser√° la primera canci√≥n
que se agreg√≥ a la lista originalmente. 

El texto que reporta este comando tiene 3 formas:
- Si el artista tiene canciones en cola, deber√° escribir el texto: 
Reproduciendo <canci√≥n> de <artista>.
, con el t√≠tulo de la canci√≥n y el nombre del artista correspondientes, tal como quedaron registrados.
- Si el artista ingresado nunca ha tenido canciones registradas, deber√° escribir el mensaje 
El artista no tiene canciones registradas.

3.detener: 
como el artista recibe un n√∫mero indeterminado de canciones, se tiene que definir una forma de 
terminar su ejecuci√≥n. 

Cuando el programa recibe el comando detener, el programa deber√° escribir el
mensaje Terminando sesi√≥n. 
¬°Hasta pronto! y terminar su ejecuci√≥n.

4. listar:
este nuevo comando deber√° permitir al usuario ver la lista de canciones de un artista en el orden 
en el que se van a reproducir. 
Primero recibir√° del usuario el nombre del artista a explorar, y luego imprimir√° en pantalla las 
canciones con el mostrado a continuaci√≥n. 
Deber√° escribir antes del t√≠tulo de la canci√≥n, un n√∫mero que indique su posici√≥n en la lista de 
reproducci√≥n, empezando desde el n√∫mero 1 siendo la pr√≥xima canci√≥n a reproducir.

1. Speak to me
2. Breathe
3. On the Run
4. Time
5. The Great Gig in the Sky

En caso de que el comando ingresado est√© mal escrito o sea desconocido por el programa, se deber√° 
informar al usuario con el mensaje 
Comando no reconocido. Intente de nuevo:.

‚å®Ô∏è Entrada
¬øC√≥mo funciona la entrada en UNCode?
La entrada ser√° provista por UNCode en la forma de casos de prueba de texto. 
Esta entrada deber√° ser recibida en su programa con instrucciones que incluyan la funci√≥n input.

El programa recibir√° un n√∫mero indefinido de l√≠neas. Cada comando ir√° en una l√≠ne individual. 
De igual forma cada entrada adicional relacionada a un comando ir√° en una nueva l√≠nea.

- comando: Hay tres comandos posibles que el progama debe aceptar a√±adir, reproducir y detener. 
Cualquier otro texto de comando ser√° tomado como erroneo.

Dependiendo del comando ingresado, el programa recibir√° otras entradas:

- Para el caso del comando a√±adir, 
el programa recibir√° canci√≥n y artista en el mismo orden. Cada entrada en una l√≠nea individual.
- Para el caso del comando reproducir, 
el programa recibir√° una entrada extra artista en la siguiente l√≠nea.
- Para el caso del comando listar, 
el programa recibir√° una entrada extra artista en la siguiente l√≠nea.

üñ•Ô∏è Salida
¬øC√≥mo funciona la salida en UNCode?
La salida ser√° capturada por UNCode y comparada con la salida esperada de cada caso de prueba. 
Esta salida deber√° ser generada por su programa con instrucciones que incluyan la funci√≥n print.

El programa debe imprimir en la salida las l√≠neas que sean necesarias seg√∫n el escenario 
correspondiente. Un ejemplo de ejecuci√≥n es el descrito en la siguiente secci√≥n.

üß© Ejemplos

¬øC√≥mo debe funcionar mi programa?
A continuaci√≥n, podr√° ver y comparar sus resultados con algunos casos de prueba de ejemplo. Utilice las entradas provistas y compare el resultado con las salidas correspondientes.

Entrada Ejemplo 1           Salida Ejemplo 1
a√±adir                      El artista no tiene canciones registradas.
Feel Good Inc.              Reproduciendo Feel Good Inc. de Gorillaz.
Gorillaz                    Reproduciendo Feel Good Inc. de Gorillaz.
reproducir                  Comando no reconocido. Intente de nuevo:
gorillaz                    Terminando la sesi√≥n. ¬°Hasta pronto!
reproducir
Gorillaz
reproducir
Gorillaz
ditinir
detener

Entrada Ejemplo 2           Salida Ejemplo 2
a√±adir                      Comando no reconocido. Intente de nuevo:
Yesterday                   Reproduciendo Yesterday de The Beatles.
The Beatles                 Reproduciendo Let it Be de The Beatles.
a√±adir                      Reproduciendo El d√≠a de mi suerte de H√©ctor Lavoe.
El d√≠a de mi suerte         Reproduciendo Yesterday de The Beatles.
H√©ctor Lavoe                Reproduciendo Let it Be de The Beatles.
Let it Be                   El artista no tiene canciones registradas.
a√±adir                      Terminando la sesi√≥n. ¬°Hasta pronto!
Let it Be
The Beatles
reproducir
The Beatles
reproducir
The Beatles
reproducir
H√©ctor Lavoe
reproducir
The Beatles
reproducir
The Beatles
reproducir
Shakira
detener
"""

"""
ESTE EJERCICIO NO CUMPLEEEEEEEEEEEEEEEEEE
"""

### ESCRIBA SU C√ìDIGO A PARTIR DE AQU√ç ### (~ 30 - 33 l√≠neas de c√≥digo)
# Declaraci√≥n de diccionario (~ 1 l√≠nea)
canciones = dict()

# Ciclo (~ 29 - 32 )
while True:
    
    comando = input()

    if comando == 'a√±adir':
        
        cancion = input()
        artista = input()
        
        if artista not in canciones:
            canciones[artista] = list()
        canciones[artista].append(cancion)

    
    elif comando == 'reproducir':

        artista = input()
        
        if artista in canciones:
            if len(canciones[artista]) > 0:
                cancion = canciones[artista]
                cancion = "".join(cancion)
            
                print(f'Reproduciendo {cancion} de {artista}.')
            else:
                print(f'No quedan canciones en cola.')
        else:
            print(f'El artista no tiene canciones registradas.')

    elif comando == 'listar':

        artista = input()
        
        if artista in canciones:
            if len(canciones[artista]) > 0:
                for sonido in canciones[artista]:
                    print(f'{canciones[artista].sonido + 1}. {sonido}')
                
        else:
                print(f'El artista no tiene canciones registradas.')


    elif comando == 'detener':
        print('Terminando la sesi√≥n. ¬°Hasta pronto!')
        break

    else:
        print('Comando no reconocido. Intente de nuevo:')