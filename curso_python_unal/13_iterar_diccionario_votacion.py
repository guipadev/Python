"""
U3 - 3 | Iterando Diccionarios
En esta pr√°ctica trabajaremos con el proceso de creaci√≥n de diccionarios y de acceso a su contenido 
por medio de estructuras iterativas.

üí° Problema: Votaci√≥n
En una instituci√≥n educativa de educaci√≥n media se est√° realizando el proceso de elecci√≥n de un 
representante estudiantil, que cumplir√° con este rol en el transcurso del a√±o. En esta edici√≥n, 
las directivas de la instituci√≥n est√°n trabajando por implementar nuevas tecnolog√≠as y han decidido
solicitar la creaci√≥n de un programa que haga el recuento de las votaciones.

Para una prueba de la utilidad de la idea en la pr√≥xima votaci√≥n, se decidi√≥ usarla como apoyo en 
el conteo de los votos. Para esto, un jurado de votaci√≥n introducir√° por nombre el candidato de 
cada una de las boletas de su mesa. Finalmente, el programa escribir√° un reporte con el nombre del 
ganador.

Escriba un programa que reciba una lista de votos por diferentes candidatos y calcule cu√°l es el 
candidato ganador. Si hay un empate el programa debe imprimir la palabra EMPATE. En caso contrario,
debe imprimir el nombre del candidato ganador.

‚å®Ô∏è Entrada
¬øC√≥mo funciona la entrada en UNCode?
La entrada ser√° provista por UNCode en la forma de casos de prueba de texto. Esta entrada deber√° 
ser recibida en su programa con instrucciones que incluyan la funci√≥n input.

El programa recibir√° n + 1 l√≠neas de entrada:

- n: La primera l√≠nea de la entrada contiene un entero n indicando el n√∫mero de votos totales.
- nombres Despu√©s de la primera l√≠nea, el programa recibir√° un total de n lineas con el nombre 
del candidato registrado en el voto.

üñ•Ô∏è Salida
¬øC√≥mo funciona la salida en UNCode?
La salida ser√° capturada por UNCode y comparada con la salida esperada de cada caso de prueba. 
Esta salida deber√° ser generada por su programa con instrucciones que incluyan la funci√≥n print.

El programa debe imprimir en la salida una √∫nica l√≠nea.

- resultado cadena de texto con el nombre del candidato ganador o con la palabra EMPATE si dos o 
m√°s candidatos tiene el mismo n√∫mero de votos.

üß© Ejemplos
¬øC√≥mo debe funcionar mi programa?
A continuaci√≥n, podr√° ver y comparar sus resultados con algunos casos de prueba de ejemplo. Utilice las entradas provistas y compare el resultado con las salidas correspondientes.

Entrada Ejemplo 1       Salida Ejemplo 1
5                       EMPATE
Juan
Mar√≠a
Pedro
Mar√≠a
Juan

Entrada Ejemplo 2       Salida Ejemplo 2
6                       Mar√≠a
Juan
Mar√≠a
Pedro
Mar√≠a
Juan
Mar√≠a
"""

### ESCRIBA SU C√ìDIGO A PARTIR DE AQU√ç ### (~ 9-16 l√≠neas de c√≥digo)
# Entrada del programa (~ 1 l√≠nea).
# Numero de entradas
num_entradas = int(input())

# variables de ayuda  (~ 1-3 l√≠neas)
# diccionario de candidatos
candidatos = {}

# Obtener los votos e ir sumando seg√∫n corresponda (~ 3-5 l√≠neas)
for i in range(1, num_entradas + 1):
    candidato = input()

    if candidatos.get(candidato) == None : candidatos[candidato] = 1

    else : candidatos[candidato] += 1

# Definir resultado (~ 3-6 l√≠neas)
maximo = max(candidatos.values())

max_keys = [key for key, value in candidatos.items() if value == maximo]

if (len(max_keys)) >=2: resultado="EMPATE"

else: resultado = max(candidatos, key = candidatos.get)

# Salida del programa (~ 1 l√≠nea).
print(resultado)