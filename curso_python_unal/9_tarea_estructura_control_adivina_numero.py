"""
U2 - 5 | Ejemplo 2 - Adivina el n√∫mero (I)
En este ejemplo se demuestra la aplicaci√≥n de los conceptos vistos durante la segunda 
unidad del curso. Para esta ocasi√≥n se desarrollar√° un peque√±o juego donde el usuario 
intente adivinar un n√∫mero entero con una cantidad m√°xima de intentos.

Para efectos pr√°cticos de la calificaci√≥n el n√∫mero que el usuario debe adivinar es dado 
al inicio de la ejecuci√≥n, ya que es necesario que el juez pueda saber de antemano los 
resultados que se van a obtener; pero con unas cuantas modificaciones se pude obtener un 
n√∫mero aleatorio de forma que termina siendo completamente oculto para el usuario. 
Esto se logra mediante el uso de una librer√≠a de Python (este tema ser√° tratado en 
unidades posteriores del curso) la cual permite obtener n√∫meros aleatorios de diferentes 
formas.

üí° Problema: Adivina el n√∫mero (I)
En un evento social organizado por su equipo de trabajo se considera la idea de realizar 
una especie de juego o concurso b√°sico con el cual entretener a los asistentes. Tras una
sesi√≥n de intercambio de ideas, se decide implementar un juego sencillo controlado por 
computador con texto. Este es un juego de adivinanzas en el cual los participantes 
deber√°n intentar adivinar un n√∫mero secreto en un n√∫mero determinado de intentos.

El juego debe cumplir las siguientes reglas.

El organizador es quien debe ingresar el n√∫mero secreto y un n√∫mero m√°ximo de intentos al 
programa
En cada ronda se debe indicar al jugador el n√∫mero de intentos restantes con el que cuenta
de la siguiente forma

Intentos restantes: <intentos>.

Si el valor ingresado por el jugador es correcto se debe imprimir el siguiente mensaje
¬°Felicidades! El n√∫mero ingresado es correcto.

En caso de que el valor ingresado sea incorrecto, se debe imprimir el siguiente mensaje 
y restar un intento

Respuesta incorrecta. Intente de nuevo.

Si el jugador se queda sin intentos se debe imprimir el siguiente mensaje

Se acabaron los intentos. El n√∫mero correcto era <valor>.

Al finalizar el juego, sin importar el resultado, se debe imprimir el siguiente mensaje
Fin del juego. ¬°Gracias por participar!

‚å®Ô∏è Entrada
¬øC√≥mo funciona la entrada en UNCode?
La entrada ser√° provista por UNCode en la forma de casos de prueba de texto. 
Esta entrada deber√° ser recibida en su programa con instrucciones que incluyan la funci√≥n
input.

El programa recibir√° inicialmente dos l√≠neas con los dos par√°metros iniciales.

- numero_secreto: n√∫mero entero con el valor secreto que deber√° intentar adivinar el 
jugador.
- intentos: n√∫mero entero con el n√∫mero m√°ximo de intentos que puede realizar el jugador.

Una vez definidos estos par√°metros iniciales, se recibir√°n los intentos del jugador las 
veces que sean necesarias con un m√°ximo de entradas igual al n√∫mero de intentos definidos
inicialmente.

üñ•Ô∏è Salida
¬øC√≥mo funciona la salida en UNCode?
La salida ser√° capturada por UNCode y comparada con la salida esperada de cada caso de 
prueba. Esta salida deber√° ser generada por su programa con instrucciones que incluyan la
funci√≥n print.

El programa debe imprimir en la salida las l√≠neas que sean necesarias seg√∫n el escenario
correspondiente. Un ejemplo de ejecuci√≥n es el descrito en la siguiente secci√≥n.

üß© Ejemplos
¬øC√≥mo debe funcionar mi programa?
A continuaci√≥n, podr√° ver y comparar sus resultados con algunos casos de prueba de ejemplo.
Utilice las entradas provistas y compare el resultado con las salidas correspondientes.

Entrada Ejemplo 1
7
3

22
6
8
Salida Ejemplo 1
Intentos restantes: 3.
Respuesta incorrecta. Intente de nuevo.
Intentos restantes: 2.
Respuesta incorrecta. Intente de nuevo.
Intentos restantes: 1.
Se acabaron los intentos. El n√∫mero correcto era 7.
Fin del juego. ¬°Gracias por participar!

Entrada Ejemplo 2
9
3

3
4
5
Salida Ejemplo 2
Intentos restantes: 3.
Respuesta incorrecta. Intente de nuevo.
Intentos restantes: 2.
Respuesta incorrecta. Intente de nuevo.
Intentos restantes: 1.
Se acabaron los intentos. El n√∫mero correcto era 9.
Fin del juego. ¬°Gracias por participar!
"""

### ESCRIBA SU C√ìDIGO A PARTIR DE AQU√ç ### (~ 18 l√≠neas de c√≥digo)

# Entrada del programa (~ 2 l√≠neas).
numero_secreto = int(input())
intentos = int(input())

# Ciclo (~ 11 l√≠neas).
## Mensaje inicial y entrada (~ 2 l√≠neas).
while intentos > 0:
    print(f'Intentos restantes: {intentos}.')
    numero_ingresado = int(input())
    
    ## Caso para respuesta correcta (~ 3 l√≠neas).
    if numero_ingresado == numero_secreto:
        print('¬°Felicidades! El n√∫mero ingresado es correcto.')
        break

    ## Caso para respuesta incorrecta (~ 6 l√≠neas).
    else:
        intentos -= 1

        ### Caso usuario sin intentos (~ 2 l√≠neas)
        if intentos == 0:
            print(f'Se acabaron los intentos. El n√∫mero correcto era {numero_secreto}.')
        ### Caso usuario con intentos (~ 2 l√≠neas)
        else:
            print('Respuesta incorrecta. Intente de nuevo.')

# Mensaje final (~ 1 l√≠nea).
print('Fin del juego. ¬°Gracias por participar!')