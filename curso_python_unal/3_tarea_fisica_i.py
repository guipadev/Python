"""
U1 - 4 | Ejemplo: Tarea de f√≠sica (I)
En este ejemplo se demuestra la aplicaci√≥n de los conceptos vistos durante la primera unidad del curso. Para esta ocasi√≥n crearemos un programa que pueda resolver un t√≠pico problema de f√≠sica.


üí° Problema: Tarea de f√≠sica (I)

Mientras realiza los deberes de un curso de f√≠sica en el que se encuentra inscrito, identifica que es com√∫n tener que definir la posici√≥n en el caso de movimiento rectil√≠neo uniformemente acelerado. En cierto punto, concluye que es preferible crear un programa de computador que genere r√°pidamente la respuesta a realizar muchas veces la misma operaci√≥n manualmente con la calculadora.


Seg√∫n el libro de texto, la posici√≥n de un objeto puede ser calculada por la siguiente ecuaci√≥n:


x = x0 + v0t + ¬Ωat¬≤ 


Para que el resultado que calcule el programa sea lo m√°s claro posible, decide que el resultado sea impreso de la siguiente forma:

La posici√≥n final es <valor> metros.


Adem√°s, para definir una presentaci√≥n consistente decide realizar un redondeo del valor obtenido con dos d√≠gitos decimales.

‚å®Ô∏è Entrada
¬øC√≥mo funciona la entrada en UNCode?
La entrada ser√° provista por UNCode en la forma de casos de prueba de texto. Esta entrada deber√° ser recibida en su programa con instrucciones que incluyan la funci√≥n input.

Su programa deber√° recibir cuatro valores x0, v0, a y t respectivamente.

- x0: cadena de texto con la posici√≥n inicial (en m)
- v0: cadena de texto con la velocidad inicial (en m/s)
- a: cadena de texto con la posici√≥n inicial (en m/s2).
- t: adena de texto con la posici√≥n inicial (en s).

üñ•Ô∏è Salida
¬øC√≥mo funciona la salida en UNCode?
La salida ser√° capturada por UNCode y comparada con la salida esperada de cada caso de prueba. Esta salida deber√° ser generada por su programa con instrucciones que incluyan la funci√≥n print.

El programa debe imprimir en la salida una √∫nica l√≠nea.

- resultado: cadena de texto con el resultado de la ecuaci√≥n en el formato descrito en el enunciado redondeado con dos d√≠gitos decimales. Como se muestra a continuaci√≥n: La posici√≥n final es <valor> metros. Donde valor corresponde a la posici√≥n calculada en metros.

üß© Ejemplos
¬øC√≥mo debe funcionar mi programa?
A continuaci√≥n, podr√° ver y comparar sus resultados con algunos casos de prueba de ejemplo. Utilice las entradas provistas y compare el resultado con las salidas correspondientes.

Entrada Ejemplo 1
15
3.2
0
0
Salida Ejemplo 1
La posici√≥n final es 15.00 metros.

Entrada Ejemplo 2
21.1
40
0.1
60
Salida Ejemplo 2
La posici√≥n final es 2601.10 metros.

Entrada Ejemplo 3
47
6
5e-2
147
Salida Ejemplo 3
La posici√≥n final es 1469.22 metros.

‚ö†Ô∏è Notas
- Recuerde que para poder realizar operaciones con los valores ingresados, es necesario realizar una tranformaci√≥n de tipo de dato.
- Se recomienda utilizar la sintaxis de cadenas con formato o f-strings para realizar operaciones como el redondeo dentro de una cadena de texto. En este caso, el modificador necesario es :.2f, con dos d√≠gitos decimales en un valor decimal o de punto flotante.
"""
# Entrada del programa (~ 4 l√≠neas).
# x0: cadena de texto con la posici√≥n inicial (en m)
x0 = float(input("ingrese x0: "))
# v0: cadena de texto con la velocidad inicial (en m/s)
v0 = float(input("ingrese v0: "))
# a: cadena de texto con la posici√≥n inicial (en m/s2).
a = float(input("ingrese a: "))
# t: adena de texto con la posici√≥n inicial (en s).
t = float(input("ingrese t: "))

# Operaci√≥n y asignaci√≥n del resultado (~ 1 l√≠nea).
#x = x0 + v0t + ¬Ωat¬≤ 

x = x0 + v0 * t + 1/2 * a * t ** 2

# Salida del programa (~ 1 l√≠nea).
print(f'La posici√≥n final es {x:6.2f} metros.')
